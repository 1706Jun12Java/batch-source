
1. Return the nth fibonacci number
function fib(n){ 
	var result = 0
	if(n<=2){
		return n-1;
	} 
	result = fib(n-1) + fib(n-2); 
	return result;
};
undefined
fib(5)
3
fib(6)
5
fib(15)
377


2. Sort array of integers
function sort(array) {
	var n = array.length;
	for(var i = 0; i < n; i++) {
		for(var j = i+1; j < n; j++) {
			if(array[i] > array[j]) { 
				var temp = array[i];
				array[i] = array[j];
				array[j] = temp;
			} 
		} 
	} 
	return array;
};
undefined
sort([2,4,5,1,3,1])
(6) [1, 1, 2, 3, 4, 5]


 3. Return the factorial of n

function factorial(n){
	var myNum = 1; 
	for (var i=1; i<=n; i++){ 
		myNum = myNum * i; 
	} 
	return myNum;
}
undefined
factorial(3)
6
factorial(4)
24

 4. Rotate left
function rotateLeft(array, n){
for (var i=0; i<n; i++){
		for (var j=0;j<array.length-1; j++){
			var temp=array[j];
			array[j]=array[j+1];
			array[j+1]=temp;
}
}
return array;
}

undefined
rotateLeft([1,2,3,4,5], 2)
(5) [3, 4, 5, 1, 2]

// rotate right
function rotateRight(array, n){
	for (var i=0; i<n; i++){
		for (var j=array.length-1; j>0; j--){
			var temp=array[j];
			array[j]=array[j-1];
			array[j-1]=temp;
		}
	}
	return array;
}


 5. Balanced Brackets
function balancedBrackets(str) {
  var stack = [];
  var open = { "{": "}", "[": "]", "(": ")" };
  var closed = { "}": true, "]": true, ")": true };
  
  for (var i = 0; i < str.length; i ++) {
    var chr = str[i];
    if (open[chr]) {
      stack.push(chr);
    } else if (closed[chr]) {
      if (open[stack.pop()] !== chr) return false;
    }
  }  
  return true;
};
undefined
balancedBrackets("()()")
true
balancedBrackets("([)]")
false
balancedBrackets("({[]})")
true
