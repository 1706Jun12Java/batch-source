--CREATE CAVE TABLE
CREATE TABLE CAVE (
  CAVE_ID INTEGER PRIMARY KEY,
  CAVE_NAME VARCHAR2(100),
  MAX_BEARS INTEGER DEFAULT 4
);

--INSERT VALUES INTO TABLE
INSERT INTO CAVE (CAVE_ID,CAVE_NAME,MAX_BEARS) VALUES (1,'AWESOMECAVE1',DEFAULT);
INSERT INTO CAVE (CAVE_ID,CAVE_NAME,MAX_BEARS) VALUES (2,'AWESOMECAVE2',3);

--ADD CONSTRAINT TO ENFORCE NO MORE THAN 10 BEARS ARE ALLOWED PER CAVE
--THIS CONSTRAINT USES A CHECK TO ENSURE NO MORE THAN 10 BEARS ARE ALLOTTED PER CAVE
ALTER TABLE CAVE
ADD CONSTRAINT CK_CAVE_MAX CHECK (MAX_BEARS < 11);

--ATTEMPTING TO RUN THESE STATEMENTS WILL YIELD AN ERROR VIOLATING THE CONSTRAINT
INSERT INTO CAVE (CAVE_ID,CAVE_NAME,MAX_BEARS) VALUES (5,'AWESOMECAVE5',10);
UPDATE CAVE SET MAX_BEARS = 15 WHERE CAVE_ID = 1;

--HOWEVER RUNNING THESE WOULD BE FINE
INSERT INTO CAVE (CAVE_ID,CAVE_NAME,MAX_BEARS) VALUES (3,'AWESOMECAVE3',10);
UPDATE CAVE SET MAX_BEARS = 8 WHERE CAVE_ID = 2;

--HERE IS A TRIGGER ALSO THAT WILL RAISE AN ERROR WHEN ATTEMPTING TO
--INSERT OR UPDATE MORE THAN 10 BEARS IN THE MAX_BEAR COLUMN
CREATE OR REPLACE TRIGGER TR_MAX_BEARS_LIMIT
AFTER UPDATE OR INSERT ON CAVE
FOR EACH ROW
BEGIN
IF :NEW.MAX_BEARS >10 THEN
RAISE_APPLICATION_ERROR (-20000,'CANNOT ADD MORE THAN 10 BEARS');
END IF;
END;

